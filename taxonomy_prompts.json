{
  "tier_a_prompt": {
    "role": "Domain Taxonomy Generator",
    "description": "Specialized in generating discrete events for a specific domain",
    "prompt_template": "You are a domain taxonomy generator specializing in discrete events.\n\nDomain: {{domain}}\n\nTASK:\nGenerate a list of 12–15 distinct, top-level (L1) categories representing *specific types of events* or *discrete occurrences* within the '{{domain}}' domain. Think incidents, launches, breakthroughs, failures, breaches, discoveries, major releases, regulatory actions, etc.\n\nRules for Labels:\n1. Format: TitleCase, 1–4 words. May include one internal hyphen (e.g., Model-Launch, Data-Breach, Regulatory-Approval). Start with a capital letter. NO hash symbols (#).\n2. Event-Driven: Must describe *what happened* (an event, a change), not an ongoing state, capability, technology area, or general theme.\n3. Specificity: Prefer specific event types over overly broad categories.\n4. Exclusion: Avoid generic business terms like {{deny_list}}. These are handled separately.\n5. Output Format: Return ONLY a JSON array of strings. Example: [\"Model-Launch\", \"System-Outage\", \"Major-Discovery\"]\n\nGenerate the JSON array now.",
    "expected_output": "JSON array of strings representing candidate labels",
    "output_parsing": "Extract JSON array using regex, with fallbacks for parsing plain text if needed",
    "model_options": ["gpt-4o", "gpt-3.5-turbo"],
    "temperature": 0.0,
    "max_tokens": 512
  },
  "tier_b_prompt": {
    "role": "Taxonomy Auditor",
    "description": "Refines and validates taxonomy labels based on specific principles",
    "prompt_template": "You are a meticulous taxonomy auditor enforcing specific principles.\n\nCandidate Event Labels for Domain '{{domain}}':\n{{candidates_json}}\n\nYour Task:\nReview the candidate labels based on the following principles and return a refined list.\n\nPrinciples to Enforce:\n1. Event-Driven Focus: Each label MUST represent a discrete event, incident, change, or occurrence. Reject labels describing general themes, capabilities, technologies, or ongoing states (e.g., \"Machine Learning\", \"Cloud Infrastructure\").\n2. Formatting: Ensure labels are 1–4 words, TitleCase. Hyphens are allowed ONLY between words (e.g., \"Data-Breach\" is okay, \"AI-Powered\" as an event type might be questionable unless it refers to a specific *launch* event). No leading symbols like '#'.\n3. Deny List: Reject any label containing the exact terms: {{deny_list}}.\n4. Consolidation & Target Count: Merge clear synonyms or overly similar event types. Aim for a final list of {{max_labels}} (±1) distinct, high-value event categories. Prioritize the most significant and common event types for the domain.\n5. Output Structure: Return ONLY a JSON object with the following keys:\n   - \"approved\": A JSON array of strings containing the final, approved labels.\n   - \"rejected\": A JSON array of strings containing the labels that were rejected or merged away.\n   - \"reason_rejected\": A JSON object mapping each rejected label (from the \"rejected\" list) to a brief reason for rejection (e.g., \"Not event-driven\", \"Synonym of X\", \"Contains denied term\", \"Too broad\").\n\nExample Output Format:\n{\n  \"approved\": [\"Model-Launch\", \"System-Outage\", \"Regulatory-Action\"],\n  \"rejected\": [\"AI Research\", \"Funding Round\", \"ProductUpdate\"],\n  \"reason_rejected\": {\n    \"AI Research\": \"Not event-driven, describes a theme.\",\n    \"Funding Round\": \"Contains denied term 'Funding'.\",\n    \"ProductUpdate\": \"Merged into Major-Release.\"\n  }\n}\n\nReturn only the JSON object now.",
    "expected_output": "JSON object with approved and rejected labels, along with rejection reasons",
    "output_parsing": "Parse as JSON with fields for approved, rejected, and rejection reasons",
    "model_options": ["gpt-4o", "gpt-3.5-turbo", "None/Offline"],
    "temperature": 0.0,
    "max_tokens": 1024
  },
  "parameters": {
    "default_max_labels": 9,
    "default_min_labels": 8,
    "default_deny_list": ["Funding", "Hiring", "Partnership"],
    "retry_parameters": {
      "max_retries": 3,
      "retry_delays": [2, 5, 10]
    }
  }
}